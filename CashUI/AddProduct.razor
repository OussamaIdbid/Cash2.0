@page "/addproduct"
@using CashModel
@using CashUI
@inject IProductService ProductService
@inject ICategoryService CategoryService
@inject IModalService ModalService


<h2>Create Product</h2>
<hr />
<div class="simple-form">

    <div class="form-group">
        <label for="name-field">Name</label>
        <input @bind="@product.Name" type="text" id="name-field" />
    </div>

    <div class="form-group">
        <label for="price-field">Price</label>
        <input @bind="@product.Price" type="text" id="price-field" />
    </div>
    <div class="form-group">
        <label for="Category" class="control-label">Category</label>
        <select id='category-input' for="Category" class="form-control" @bind="@product.CategoryId">
            <option id="category-placeholder" value="Selecteer categorie"></option>
            @foreach (var category in categories)
            {
                <option value="@category.CategoryId">@category.CategoryName</option>



            }
        </select>
    </div>
    <button class="btn  btn-primary shadow-sm checkout-button m-1" @onclick="ConfirmClose">Submit</button>
    <button class="btn  btn-primary shadow-sm checkout-button m-1" @onclick="CancelClose">Cancel</button>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    Product product = new Product();
    IEnumerable<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetCategories();
    }

    public async Task ConfirmClose()
    {
        await ProductService.CreateProduct(product);

        BlazoredModal.Close();

    }
    public void CancelClose()
    {


        BlazoredModal.Cancel();

    }
}
