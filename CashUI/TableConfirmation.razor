@inject IModalService ModalService
@inject IToastService ToastService



            <div class="modal-content">
                <div class="modal-body">
                    <p>Als je de tafel vrij maakt wordt de huidige bestelling geannuleerd.</p>
                </div>
                <div class="modal-footer">
                    <button class="btn  btn-primary shadow-sm checkout-button m-1" @onclick="ConfirmClose">Submit</button>
                    <button class="btn  btn-primary shadow-sm checkout-button m-1" @onclick="CancelClose">Cancel</button>
                </div>
            </div>



    
@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    bool Confirm;


    protected override async Task OnInitializedAsync()
    {
    }

    public void ConfirmClose()
    {
        bool Confirm = true;

        BlazoredModal.Close(ModalResult.Ok(Confirm));

    }
    public void CancelClose()
    {
        bool Confirm = false;

        BlazoredModal.Close(ModalResult.Ok(Confirm));

    }

}
