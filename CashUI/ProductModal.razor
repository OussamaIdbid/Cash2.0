@inject IModalService ModalService
@inject IProductService ProductService
@inject IToastService ToastService
    <div class="simple-form">

        <div class="form-group">
            <label for="name-field">Name</label>
            <input type="text" id="name-field" value="@product.Name" disabled/>
        </div>

        <div class="form-group">
            <label for="price-field">Price</label>
            <input type="text" id="price-field" value="@product.Price"  disabled />
        </div>
        <div class="form-group">
            <label for="amount-field">Hoeveelheid</label>
            <input @bind="@Amount" id="amount-field" type="text" />
        </div>
        <button class="btn  btn-primary shadow-sm checkout-button m-1" @onclick="AddToCart">Submit</button>
    </div>
@code {

    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }
    [Parameter] public int ProductId { get; set; }
    //[Parameter] public EventCallback<OrderItem> OnOrderItemSubmit { get; set; }

    public int Amount { get; set; }
    Product product = new Product();


    protected override async Task OnInitializedAsync()
    {
        product = await ProductService.SingleProduct(ProductId);
    }

    public void AddToCart()
    {
        OrderItem orderItem = new OrderItem();
        orderItem.Quantity = Amount;
        orderItem.TotalPrice = ((Math.Round(product.Price,2)) * Amount);
        orderItem.Product = product;

        if(orderItem.Quantity == 0)
        {
            ToastService.ShowToast(ToastLevel.Info, "Please choose an amount");

        }
        else
        {
            BlazoredModal.Close(ModalResult.Ok(orderItem));

        }
        //OnOrderItemSubmit.InvokeAsync(orderItem);
    }
}
