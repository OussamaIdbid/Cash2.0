@using CashModel
@inject ICategoryService CategoryService
@inject IProductService ProductService
@inject IOperationService OperationService



<div class="">
    <div class="product-container">


        @if (categories == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @foreach (var item in categories)
            {

                <p class="product-test rounded shadow-sm"  @onclick="(() => GetCategoryId(item))">
                    @item.CategoryName
                </p>

            }
        }
    </div>

</div>



@code {

    /*public Category currentCategory { get; set; }
    Category CurrentCategory
    {
        get => currentCategory;
        set
        {
            currentCategory = value;
            Console.Write(value.CategoryId);
            OnIdChanged.InvokeAsync(value.CategoryId);
        }
    }*/
    public int GetCategoryId(Category category)
    {
        Console.Write(category.CategoryId);
        OnIdChanged.InvokeAsync(category.CategoryId);
        return category.CategoryId;
    }
    public IEnumerable<Category> categories;
    [Parameter] public EventCallback<int> OnIdChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetCategories();
    }
}

