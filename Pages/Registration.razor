@using CashModel
@using CashUI
@inject NavigationManager NavigationManager
@inject IUserService UserService
@page "/registration"
<!--<div class="container">
    <div class="row">
        <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
            <div class="card card-signin my-5">
                <div class="card-body">
                    <h5 class="card-title text-center">Sign In</h5>
                    <form class="form-signin">
                        <div class="form-label-group">
                            <input @bind="@user.Username" id="inputEmail" class="form-control" placeholder="Email address" required autofocus>
                            <label for="inputEmail">Email address</label>
                        </div>

                        <div class="form-label-group">
                            <input @bind="user.Password" id="inputPassword" class="form-control" placeholder="Password" required>
                            <label for="inputPassword">Password</label>
                        </div>
                        <div class="btn btn-lg btn-primary btn-block text-uppercase" > Sign in</div>
                        <hr class="my-4">

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>-->

@code {

    /*User user = new User { get; set; }
    IEnumerable<User> users = new List<User>();

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.CreateUser(user);

    }

    void Auth()
    {

        foreach (var item in users)

            if (item.Username == username && item.Password == password)
            {
                NavigationManager.NavigateTo("/cash");
                User.IsloggedIn = true;
            }
            else
            {
                Console.WriteLine("wrong password");
            }
        {

        }

    }
}*/
