@using CashModel
@inject NavigationManager NavigationManager
@inject IOperationService OperationService
@inject IToastService ToastService
<div>
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <div class="nav-link" @onclick="(() => ToHome())">
                <span class="material-icons">
                    home
                </span>
            </div>
        </li>
        <li class="nav-item px-3">
            <div class="nav-link" @onclick="(() => ToConfig())">
                <span class="material-icons">
                    settings
                </span>
            </div>
        </li>
        <li class="nav-item px-3">
            <div class="nav-link" @onclick="(() => Logout())">
                <span id="logout-icon" class="material-icons">
                    exit_to_app
                </span>
            </div>
        </li>

    </ul>
</div>

@code {
    public void ToHome()
    {
        NavigationManager.NavigateTo("/cash");
    }
    public async Task ToConfig()
    {
        Operation operation = new Operation();
        operation.UserId = User.CurrentId;
        operation.Description = User.CurrentUsername + " clicked on the configuration page";
        await OperationService.CreateOperation(operation);

        NavigationManager.NavigateTo("/configuration");
    }
    public async Task Logout()
    {
        Operation operation = new Operation();
        operation.Description = User.CurrentUsername + " has logged out";
        operation.UserId = User.CurrentId;

        User.IsloggedIn = false;
        NavigationManager.NavigateTo("/");
        ToastService.ShowToast(ToastLevel.Success, "Logged out");
        await OperationService.CreateOperation(operation);
    }
}

